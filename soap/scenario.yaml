apiVersion: phenix.sandia.gov/v2
kind: Scenario
metadata:
  name: soap-hil
  created: ""
  updated: ""
  annotations:
    topology: soap-hil
spec:
  apps:
    - name: tap
      metadata:
        taps:
          - bridge: phenix
            vlan: MGMT
            ip: 172.16.0.1/16
            externalAccess:
              enabled: true
    - name: mirror
      metadata:
        directGRE:
          enabled: true
          mirrorBridge: phenix
          mirrorVLAN: MIRROR
      hosts:
        - hostname: netmonitor
          metadata:
            interface: mirror
            vlans:
              - EXP
    - name: sceptre
      assetDir: /phenix/topologies/soap-hil
      hosts:
        - hostname: ignition
          metadata:
            labels:
              - ignition
        - hostname: power-provider
          metadata:
            case: /phenix/topologies/soap-hil/injects/case300.py
            labels:
              - elk
            publish_endpoint: udp://*;239.0.0.1:40000
            simulator: PyPower
            type: provider
          # note: RTU configs below are overridden by configs in injects/override
          # this is done to keep DNP3 addresses static to match with Ignition project
          # the configs below are here for demonstration only
        - hostname: rtu-1
          metadata:
            dnp3:
              - name: bus-242
                type: bus
              - name: generator-1_bus-242
                type: generator
              - name: bus-alert
                type: bus
            infrastructure: power-transmission
            labels:
              - elk
            provider: power-provider
            type: fd-server
        - hostname: rtu-2
          metadata:
            dnp3:
              - name: bus-243
                type: bus
              - name: load-1_bus-243
                type: load
              - name: generator-1_bus-243
                type: generator
            infrastructure: power-transmission
            labels:
              - elk
            provider: power-provider
            type: fd-server
        - hostname: rtu-3
          metadata:
            dnp3:
              - name: bus-244
                type: bus
              - name: branch-1_243-244
                type: branch
            infrastructure: power-transmission
            labels:
              - elk
            provider: power-provider
            type: fd-server
        - hostname: rtu-4
          metadata:
            dnp3:
              - name: bus-245
                type: bus
              - name: load-1_bus-245
                type: load
              - name: branch-1_242-245
                type: branch
              - name: branch-1_243-245
                type: branch
            infrastructure: power-transmission
            labels:
              - elk
            provider: power-provider
            type: fd-server
    - name: scorch
      metadata:
        components:
          # vmstats tracks the vm ram and cpu usage during an experiment
          - name: vmstats
            type: vmstats
            metadata:
              filebeat.inputs:
                # can input to filebeat if enabled
                - enabled: false
                  type: log
                  json.add_error_key: true
                  paths:
                    - vm_stats.jsonl
                  processors:
                    - copy_fields:
                      fields:
                        - from: json
                          to: scorch.vmstats
                    - drop_fields:
                        fields:
                          - json
                    - timestamp:
                        field: scorch.vmstats.UTC
                        layouts:
                          - "2006-01-02 15:04:05"
          - name: hoststats
            # Hoststats tracks the cpu and ram usage of the minimega host
            type: hoststats
            background: true
            metadata:
              filebeat.inputs:
                - enabled: false
                  type: log
                  json.add_error_key: true
                  paths:
                    - host_stats.jsonl
                  processors:
                    - copy_fields:
                      fields:
                        - from: json
                          to: scorch.hoststats
                    - drop_fields:
                        fields:
                          - json
                    - timestamp:
                        field: scorch.hoststats.timestamp
                        layouts:
                          - UNIX_MS
          - name: packetcap
            # Creates a packet capture on the netmonitor host
            # Uses interface 1 to capture and save all packets to the phenix docker container
            type: mm
            metadata:
              vms:
                - hostname: netmonitor
                  configure:
                    - type: connect
                      connect:
                        interface: 1
                        vlan: MIRROR
                        bridge: phenix
                  start:
                    - type: start_capture
                      capture:
                        interface: 1
                        filename: capture.pcap
                        snaplen: null
                  stop:
                    - type: stop_capture
                      capture:
                        convert: true
                  cleanup:
                    - type: disconnect
                      disconnect:
                        interface: 1
          - name: packet-pause
            type: pause
            metadata:
              duration: 30s
          - name: exp-break
            type: break
          - name: zeekctl
            type: cc
            metadata:
              vms:
                - hostname: netmonitor
                  configure:
                    - type: exec
                      args: bash -c "/opt/zeek/bin/zeekctl deploy"
                      once: true
                  cleanup:
                    - type: exec
                      args: bash -c "/opt/zeek/bin/zeekctl stop"
                      once: true
        runs:
          - configure:
              - packetcap
              - zeekctl
            start:
              - vmstats
              - packetcap
              - hoststats
              - exp-break
            stop:
              - packetcap
              - hoststats
            cleanup:
              - packetcap
              - zeekctl
        filebeat:
          enabled: true
          config:
            output.elasticsearch:
              hosts:
                - localhost:9200
            setup.dashboards.enabled: true
            setup.kibana.host: http://localhost:5601
